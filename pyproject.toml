# The preference build system would have been flit, but setuptools had to be
# used to support `pip install git+http...` within Databricks. When trying
# to parse the version using flit, it needs to import the full package
# and some dependencies might be missing in the virtual environment.
# Setuptools allow to explicitly set the location of the version without
# having to import the package.
[build-system]
requires = [
#    "flit_core >=3.2,<4",
    "setuptools",
    "setuptools-scm",
]
#build-backend = "flit_core.buildapi"
build-backend = "setuptools.build_meta"

[project]
name = "laktory"
authors = [
    {name = "Olivier Soucy", email = "olivier.soucy@okube.ai"},
]
description = "A DataOps framework for building a lakehouse"
readme = "README.md"
requires-python = ">=3.9"
keywords = ["one", "two"]
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dynamic = ["version"]
dependencies = [
    "databricks-sdk",
    "jsonref",
    "pulumi",
    "pulumi_databricks",
    "pyyaml",
    "pydantic>=2",
    "settus",
]

[project.optional-dependencies]
dev = [
    "black",
    "databricks-sdk",
    "databricks-sql-connector",
    "flit",
#    "pyspark",
]
test = [
    "pytest",
    "pytest-cov",
#    "tox"
]
azure = [
    "azure-identity",
    "azure-storage-blob",
    "pulumi_azure",
    "pulumi_azure_native",
]
aws = [
    "boto3",
    "pulumi_aws",
]
gcp = [
]

[project.urls]
"Homepage" = "https://github.com/opencubes-ai/laktory"
"Bug Tracker" = "https://github.com/opencubes-ai/laktory/issues"

[tool.setuptools.packages.find]
include = ["laktory*"]

[tool.setuptools.dynamic]
version = {attr = "laktory._version.VERSION"}

