name: run-quickstart

on:
  workflow_call:
    inputs:
      cwd:
        type: string
        description: 'Working Directory'
        required: true
      template:
        type: string
        description: 'Quickstart Template'
        required: true
      run_workflows:
        type: boolean
        description: 'Run workflows or not'
        required: true
      destroy:
        type: boolean
        description: 'Destroy stack after deployment'
        default: true
env:
  DATABRICKS_HOST: ${{ vars.DATABRICKS_HOST }}
  DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  DATABRICKS_ACCOUNT_ID: ${{ secrets.DATABRICKS_ACCOUNT_ID }}
  DATABRICKS_HOST_DEV: ${{ secrets.DATABRICKS_HOST_DEV }}
  DATABRICKS_TOKEN_DEV: ${{ secrets.DATABRICKS_TOKEN_DEV }}
  CWD: ${{ inputs.cwd }}

jobs:
  laktory-quickstart:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: env vars
        run: |
          import os
          for k, v in os.environ.items():
            print(k, "|", v)
        shell: python

      - name: Install Laktory
        run: make install-with-dbks

      - name: make dir
        run: |
          mkdir -p ${{ env.CWD }}

      - name: run quickstart
        run: laktory quickstart -t ${{ inputs.template }} -b terraform
        working-directory: ${{ env.CWD }}

      - name: update stack
        run: python ../.github/scripts/update_quickstart_stack.py ${{ github.ref }}
        working-directory: ${{ env.CWD }}

      - name: laktory init
        run: laktory init
        working-directory: ${{ env.CWD }}

      - name: laktory preview
        run: |
          set -e
          laktory preview
        working-directory: ${{ env.CWD }}

      - name: laktory deploy
        run: laktory deploy -y
        working-directory: ${{ env.CWD }}

      # TODO: Convert to serverless in update_quickstart_stack.py to save
      #       compute time?
      - name: laktory run hello
        if: ${{ inputs.run_workflows }}
        run: laktory run --job job-hello
        working-directory: ${{ env.CWD }}

      - name: laktory run job
        if: ${{ inputs.run_workflows }}
        run: laktory run --job job-pl-stock-sql
        working-directory: ${{ env.CWD }}

      - name: laktory run dlt
        if: ${{ inputs.run_workflows }}
        run: laktory run --dlt pl-stocks-spark-dlt
        working-directory: ${{ env.CWD }}

      - name: laktory destroy
        if: ${{ inputs.destroy }}
        run: laktory destroy -y
        working-directory: ${{ env.CWD }}
